plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.8'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'

    //querydsl dependencies 추가(스프링부트 3.0 이상)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // VALIDATION
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Aws Java Sdk S3
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.630'
    testImplementation 'org.projectlombok:lombok:1.18.28'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // H2 Database
    runtimeOnly 'com.h2database:h2'

    // MySQL Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // REDIS
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // JUnit 5
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // JSON
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
    testImplementation "org.testcontainers:testcontainers:1.17.6"
    testImplementation "org.testcontainers:junit-jupiter:1.17.6"

    // SpringDoc OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // nanoId
    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0'

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'com.github.maricn:logback-slack-appender:1.6.1'

    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

    // JTS
    implementation 'org.locationtech.jts:jts-core:1.19.0'

    // Hibernate Spatial
    implementation 'org.hibernate:hibernate-spatial:6.4.4.Final'
}

def querydslSrcDir = 'src/main/generated'

clean {
    delete file(querydslSrcDir)
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
